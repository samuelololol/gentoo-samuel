diff -urNp three-finger-dragging-1.9.0/src/Makefile.in xf86-input-synaptics-1.9.0/src/Makefile.in
--- three-finger-dragging-1.9.0/src/Makefile.in	1970-01-01 08:00:00.000000000 +0800
+++ xf86-input-synaptics-1.9.0/src/Makefile.in	2016-11-18 11:09:55.000000000 +0800
@@ -0,0 +1,735 @@
+# Makefile.in generated by automake 1.15 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994-2014 Free Software Foundation, Inc.
+
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+@SET_MAKE@
+
+#  Copyright 2005 Adam Jackson.
+#
+#  Permission is hereby granted, free of charge, to any person obtaining a
+#  copy of this software and associated documentation files (the "Software"),
+#  to deal in the Software without restriction, including without limitation
+#  on the rights to use, copy, modify, merge, publish, distribute, sub
+#  license, and/or sell copies of the Software, and to permit persons to whom
+#  the Software is furnished to do so, subject to the following conditions:
+#
+#  The above copyright notice and this permission notice (including the next
+#  paragraph) shall be included in all copies or substantial portions of the
+#  Software.
+#
+#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+#  FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.  IN NO EVENT SHALL
+#  ADAM JACKSON BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+#  IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+#  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+VPATH = @srcdir@
+am__is_gnu_make = { \
+  if test -z '$(MAKELEVEL)'; then \
+    false; \
+  elif test -n '$(MAKE_HOST)'; then \
+    true; \
+  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
+    true; \
+  else \
+    false; \
+  fi; \
+}
+am__make_running_with_option = \
+  case $${target_option-} in \
+      ?) ;; \
+      *) echo "am__make_running_with_option: internal error: invalid" \
+              "target option '$${target_option-}' specified" >&2; \
+         exit 1;; \
+  esac; \
+  has_opt=no; \
+  sane_makeflags=$$MAKEFLAGS; \
+  if $(am__is_gnu_make); then \
+    sane_makeflags=$$MFLAGS; \
+  else \
+    case $$MAKEFLAGS in \
+      *\\[\ \	]*) \
+        bs=\\; \
+        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
+          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
+    esac; \
+  fi; \
+  skip_next=no; \
+  strip_trailopt () \
+  { \
+    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
+  }; \
+  for flg in $$sane_makeflags; do \
+    test $$skip_next = yes && { skip_next=no; continue; }; \
+    case $$flg in \
+      *=*|--*) continue;; \
+        -*I) strip_trailopt 'I'; skip_next=yes;; \
+      -*I?*) strip_trailopt 'I';; \
+        -*O) strip_trailopt 'O'; skip_next=yes;; \
+      -*O?*) strip_trailopt 'O';; \
+        -*l) strip_trailopt 'l'; skip_next=yes;; \
+      -*l?*) strip_trailopt 'l';; \
+      -[dEDm]) skip_next=yes;; \
+      -[JT]) skip_next=yes;; \
+    esac; \
+    case $$flg in \
+      *$$target_option*) has_opt=yes; break;; \
+    esac; \
+  done; \
+  test $$has_opt = yes
+am__make_dryrun = (target_option=n; $(am__make_running_with_option))
+am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
+pkgdatadir = $(datadir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkglibexecdir = $(libexecdir)/@PACKAGE@
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+build_triplet = @build@
+host_triplet = @host@
+@BUILD_PS2COMM_TRUE@am__append_1 = \
+@BUILD_PS2COMM_TRUE@	alpscomm.c \
+@BUILD_PS2COMM_TRUE@	ps2comm.c ps2comm.h
+
+@BUILD_EVENTCOMM_TRUE@am__append_2 = \
+@BUILD_EVENTCOMM_TRUE@	eventcomm.c eventcomm.h
+
+@BUILD_EVENTCOMM_TRUE@am__append_3 = $(LIBEVDEV_CFLAGS)
+@BUILD_PSMCOMM_TRUE@am__append_4 = \
+@BUILD_PSMCOMM_TRUE@	psmcomm.c
+
+subdir = src
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/configure.ac
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
+mkinstalldirs = $(install_sh) -d
+CONFIG_HEADER = $(top_builddir)/config.h
+CONFIG_CLEAN_FILES =
+CONFIG_CLEAN_VPATH_FILES =
+am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
+am__vpath_adj = case $$p in \
+    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
+    *) f=$$p;; \
+  esac;
+am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
+am__install_max = 40
+am__nobase_strip_setup = \
+  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
+am__nobase_strip = \
+  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
+am__nobase_list = $(am__nobase_strip_setup); \
+  for p in $$list; do echo "$$p $$p"; done | \
+  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
+  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
+    if (++n[$$2] == $(am__install_max)) \
+      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
+    END { for (dir in files) print dir, files[dir] }'
+am__base_list = \
+  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
+  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
+am__uninstall_files_from_dir = { \
+  test -z "$$files" \
+    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
+    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
+         $(am__cd) "$$dir" && rm -f $$files; }; \
+  }
+am__installdirs = "$(DESTDIR)$(synaptics_drv_ladir)"
+LTLIBRARIES = $(synaptics_drv_la_LTLIBRARIES)
+am__DEPENDENCIES_1 =
+@BUILD_EVENTCOMM_TRUE@synaptics_drv_la_DEPENDENCIES =  \
+@BUILD_EVENTCOMM_TRUE@	$(am__DEPENDENCIES_1)
+am__synaptics_drv_la_SOURCES_DIST = synaptics.c synapticsstr.h \
+	synproto.c synproto.h properties.c alpscomm.c ps2comm.c \
+	ps2comm.h eventcomm.c eventcomm.h psmcomm.c
+@BUILD_PS2COMM_TRUE@am__objects_1 = alpscomm.lo ps2comm.lo
+@BUILD_EVENTCOMM_TRUE@am__objects_2 = eventcomm.lo
+@BUILD_PSMCOMM_TRUE@am__objects_3 = psmcomm.lo
+am_synaptics_drv_la_OBJECTS = synaptics.lo synproto.lo properties.lo \
+	$(am__objects_1) $(am__objects_2) $(am__objects_3)
+synaptics_drv_la_OBJECTS = $(am_synaptics_drv_la_OBJECTS)
+AM_V_lt = $(am__v_lt_@AM_V@)
+am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
+am__v_lt_0 = --silent
+am__v_lt_1 = 
+synaptics_drv_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
+	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
+	$(AM_CFLAGS) $(CFLAGS) $(synaptics_drv_la_LDFLAGS) $(LDFLAGS) \
+	-o $@
+AM_V_P = $(am__v_P_@AM_V@)
+am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
+am__v_P_0 = false
+am__v_P_1 = :
+AM_V_GEN = $(am__v_GEN_@AM_V@)
+am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
+am__v_GEN_0 = @echo "  GEN     " $@;
+am__v_GEN_1 = 
+AM_V_at = $(am__v_at_@AM_V@)
+am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
+am__v_at_0 = @
+am__v_at_1 = 
+DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
+depcomp = $(SHELL) $(top_srcdir)/depcomp
+am__depfiles_maybe = depfiles
+am__mv = mv -f
+COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
+	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
+LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
+	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
+	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
+	$(AM_CFLAGS) $(CFLAGS)
+AM_V_CC = $(am__v_CC_@AM_V@)
+am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
+am__v_CC_0 = @echo "  CC      " $@;
+am__v_CC_1 = 
+CCLD = $(CC)
+LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
+	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
+	$(AM_LDFLAGS) $(LDFLAGS) -o $@
+AM_V_CCLD = $(am__v_CCLD_@AM_V@)
+am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
+am__v_CCLD_0 = @echo "  CCLD    " $@;
+am__v_CCLD_1 = 
+SOURCES = $(synaptics_drv_la_SOURCES)
+DIST_SOURCES = $(am__synaptics_drv_la_SOURCES_DIST)
+am__can_run_installinfo = \
+  case $$AM_UPDATE_INFO_DIR in \
+    n|no|NO) false;; \
+    *) (install-info --version) >/dev/null 2>&1;; \
+  esac
+am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
+# Read a list of newline-separated strings from the standard input,
+# and print each of them once, without duplicates.  Input order is
+# *not* preserved.
+am__uniquify_input = $(AWK) '\
+  BEGIN { nonempty = 0; } \
+  { items[$$0] = 1; nonempty = 1; } \
+  END { if (nonempty) { for (i in items) print i; }; } \
+'
+# Make sure the list of sources is unique.  This is necessary because,
+# e.g., the same source file might be shared among _SOURCES variables
+# for different programs/libraries.
+am__define_uniq_tagged_files = \
+  list='$(am__tagged_files)'; \
+  unique=`for i in $$list; do \
+    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+  done | $(am__uniquify_input)`
+ETAGS = etags
+CTAGS = ctags
+am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = @ACLOCAL@
+ADMIN_MAN_DIR = @ADMIN_MAN_DIR@
+ADMIN_MAN_SUFFIX = @ADMIN_MAN_SUFFIX@
+AMTAR = @AMTAR@
+AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
+APP_MAN_DIR = @APP_MAN_DIR@
+APP_MAN_SUFFIX = @APP_MAN_SUFFIX@
+AR = @AR@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+BASE_CFLAGS = @BASE_CFLAGS@
+CC = @CC@
+CCDEPMODE = @CCDEPMODE@
+CFLAGS = @CFLAGS@
+CHANGELOG_CMD = @CHANGELOG_CMD@
+CPP = @CPP@
+CPPFLAGS = @CPPFLAGS@
+CWARNFLAGS = @CWARNFLAGS@
+CYGPATH_W = @CYGPATH_W@
+DEFS = @DEFS@
+DEPDIR = @DEPDIR@
+DLLTOOL = @DLLTOOL@
+DRIVER_MAN_DIR = @DRIVER_MAN_DIR@
+DRIVER_MAN_SUFFIX = @DRIVER_MAN_SUFFIX@
+DSYMUTIL = @DSYMUTIL@
+DUMPBIN = @DUMPBIN@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EGREP = @EGREP@
+EXEEXT = @EXEEXT@
+FGREP = @FGREP@
+FILE_MAN_DIR = @FILE_MAN_DIR@
+FILE_MAN_SUFFIX = @FILE_MAN_SUFFIX@
+GREP = @GREP@
+INSTALL = @INSTALL@
+INSTALL_CMD = @INSTALL_CMD@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+LD = @LD@
+LDFLAGS = @LDFLAGS@
+LIBEVDEV_CFLAGS = @LIBEVDEV_CFLAGS@
+LIBEVDEV_LIBS = @LIBEVDEV_LIBS@
+LIBOBJS = @LIBOBJS@
+LIBS = @LIBS@
+LIBTOOL = @LIBTOOL@
+LIB_MAN_DIR = @LIB_MAN_DIR@
+LIB_MAN_SUFFIX = @LIB_MAN_SUFFIX@
+LIPO = @LIPO@
+LN_S = @LN_S@
+LTLIBOBJS = @LTLIBOBJS@
+LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
+MAKEINFO = @MAKEINFO@
+MANIFEST_TOOL = @MANIFEST_TOOL@
+MAN_SUBSTS = @MAN_SUBSTS@
+MISC_MAN_DIR = @MISC_MAN_DIR@
+MISC_MAN_SUFFIX = @MISC_MAN_SUFFIX@
+MKDIR_P = @MKDIR_P@
+NM = @NM@
+NMEDIT = @NMEDIT@
+OBJDUMP = @OBJDUMP@
+OBJEXT = @OBJEXT@
+OTOOL = @OTOOL@
+OTOOL64 = @OTOOL64@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_URL = @PACKAGE_URL@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+PKG_CONFIG = @PKG_CONFIG@
+PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
+PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
+RANLIB = @RANLIB@
+SED = @SED@
+SET_MAKE = @SET_MAKE@
+SHELL = @SHELL@
+STRICT_CFLAGS = @STRICT_CFLAGS@
+STRIP = @STRIP@
+VERSION = @VERSION@
+XI_CFLAGS = @XI_CFLAGS@
+XI_LIBS = @XI_LIBS@
+XORG_CFLAGS = @XORG_CFLAGS@
+XORG_LIBS = @XORG_LIBS@
+XORG_MALLOC_DEBUG_ENV = @XORG_MALLOC_DEBUG_ENV@
+XORG_MAN_PAGE = @XORG_MAN_PAGE@
+XTST_CFLAGS = @XTST_CFLAGS@
+XTST_LIBS = @XTST_LIBS@
+abs_builddir = @abs_builddir@
+abs_srcdir = @abs_srcdir@
+abs_top_builddir = @abs_top_builddir@
+abs_top_srcdir = @abs_top_srcdir@
+ac_ct_AR = @ac_ct_AR@
+ac_ct_CC = @ac_ct_CC@
+ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
+am__include = @am__include@
+am__leading_dot = @am__leading_dot@
+am__quote = @am__quote@
+am__tar = @am__tar@
+am__untar = @am__untar@
+bindir = @bindir@
+build = @build@
+build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
+builddir = @builddir@
+configdir = @configdir@
+datadir = @datadir@
+datarootdir = @datarootdir@
+docdir = @docdir@
+dvidir = @dvidir@
+exec_prefix = @exec_prefix@
+host = @host@
+host_alias = @host_alias@
+host_cpu = @host_cpu@
+host_os = @host_os@
+host_vendor = @host_vendor@
+htmldir = @htmldir@
+includedir = @includedir@
+infodir = @infodir@
+inputdir = @inputdir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+localedir = @localedir@
+localstatedir = @localstatedir@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+oldincludedir = @oldincludedir@
+pdfdir = @pdfdir@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+psdir = @psdir@
+sbindir = @sbindir@
+sdkdir = @sdkdir@
+sharedstatedir = @sharedstatedir@
+srcdir = @srcdir@
+sysconfdir = @sysconfdir@
+target_alias = @target_alias@
+top_build_prefix = @top_build_prefix@
+top_builddir = @top_builddir@
+top_srcdir = @top_srcdir@
+
+# this is obnoxious:
+# -module lets us name the module exactly how we want
+# -avoid-version prevents gratuitous .0.0.0 version numbers on the end
+# _ladir passes a dummy rpath to libtool so the thing will actually link
+# TODO: -nostdlib/-Bstatic/-lgcc platform magic, not installing the .a, etc.
+synaptics_drv_la_LTLIBRARIES = synaptics_drv.la
+synaptics_drv_la_LDFLAGS = -module -avoid-version
+synaptics_drv_ladir = @inputdir@
+AM_CPPFLAGS = -I$(top_srcdir)/include $(am__append_3)
+AM_CFLAGS = $(XORG_CFLAGS)
+synaptics_drv_la_SOURCES = synaptics.c synapticsstr.h synproto.c \
+	synproto.h properties.c $(am__append_1) $(am__append_2) \
+	$(am__append_4)
+@BUILD_EVENTCOMM_TRUE@synaptics_drv_la_LIBADD = \
+@BUILD_EVENTCOMM_TRUE@	$(LIBEVDEV_LIBS)
+
+all: all-am
+
+.SUFFIXES:
+.SUFFIXES: .c .lo .o .obj
+$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
+	        && { if test -f $@; then exit 0; else break; fi; }; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
+	$(am__cd) $(top_srcdir) && \
+	  $(AUTOMAKE) --foreign src/Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure:  $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(am__aclocal_m4_deps):
+
+install-synaptics_drv_laLTLIBRARIES: $(synaptics_drv_la_LTLIBRARIES)
+	@$(NORMAL_INSTALL)
+	@list='$(synaptics_drv_la_LTLIBRARIES)'; test -n "$(synaptics_drv_ladir)" || list=; \
+	list2=; for p in $$list; do \
+	  if test -f $$p; then \
+	    list2="$$list2 $$p"; \
+	  else :; fi; \
+	done; \
+	test -z "$$list2" || { \
+	  echo " $(MKDIR_P) '$(DESTDIR)$(synaptics_drv_ladir)'"; \
+	  $(MKDIR_P) "$(DESTDIR)$(synaptics_drv_ladir)" || exit 1; \
+	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(synaptics_drv_ladir)'"; \
+	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(synaptics_drv_ladir)"; \
+	}
+
+uninstall-synaptics_drv_laLTLIBRARIES:
+	@$(NORMAL_UNINSTALL)
+	@list='$(synaptics_drv_la_LTLIBRARIES)'; test -n "$(synaptics_drv_ladir)" || list=; \
+	for p in $$list; do \
+	  $(am__strip_dir) \
+	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(synaptics_drv_ladir)/$$f'"; \
+	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(synaptics_drv_ladir)/$$f"; \
+	done
+
+clean-synaptics_drv_laLTLIBRARIES:
+	-test -z "$(synaptics_drv_la_LTLIBRARIES)" || rm -f $(synaptics_drv_la_LTLIBRARIES)
+	@list='$(synaptics_drv_la_LTLIBRARIES)'; \
+	locs=`for p in $$list; do echo $$p; done | \
+	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
+	      sort -u`; \
+	test -z "$$locs" || { \
+	  echo rm -f $${locs}; \
+	  rm -f $${locs}; \
+	}
+
+synaptics_drv.la: $(synaptics_drv_la_OBJECTS) $(synaptics_drv_la_DEPENDENCIES) $(EXTRA_synaptics_drv_la_DEPENDENCIES) 
+	$(AM_V_CCLD)$(synaptics_drv_la_LINK) -rpath $(synaptics_drv_ladir) $(synaptics_drv_la_OBJECTS) $(synaptics_drv_la_LIBADD) $(LIBS)
+
+mostlyclean-compile:
+	-rm -f *.$(OBJEXT)
+
+distclean-compile:
+	-rm -f *.tab.c
+
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/alpscomm.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eventcomm.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/properties.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ps2comm.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/psmcomm.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/synaptics.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/synproto.Plo@am__quote@
+
+.c.o:
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<
+
+.c.obj:
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
+
+.c.lo:
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<
+
+mostlyclean-libtool:
+	-rm -f *.lo
+
+clean-libtool:
+	-rm -rf .libs _libs
+
+ID: $(am__tagged_files)
+	$(am__define_uniq_tagged_files); mkid -fID $$unique
+tags: tags-am
+TAGS: tags
+
+tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
+	set x; \
+	here=`pwd`; \
+	$(am__define_uniq_tagged_files); \
+	shift; \
+	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
+	  test -n "$$unique" || unique=$$empty_fix; \
+	  if test $$# -gt 0; then \
+	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	      "$$@" $$unique; \
+	  else \
+	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	      $$unique; \
+	  fi; \
+	fi
+ctags: ctags-am
+
+CTAGS: ctags
+ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
+	$(am__define_uniq_tagged_files); \
+	test -z "$(CTAGS_ARGS)$$unique" \
+	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
+	     $$unique
+
+GTAGS:
+	here=`$(am__cd) $(top_builddir) && pwd` \
+	  && $(am__cd) $(top_srcdir) \
+	  && gtags -i $(GTAGS_ARGS) "$$here"
+cscopelist: cscopelist-am
+
+cscopelist-am: $(am__tagged_files)
+	list='$(am__tagged_files)'; \
+	case "$(srcdir)" in \
+	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
+	  *) sdir=$(subdir)/$(srcdir) ;; \
+	esac; \
+	for i in $$list; do \
+	  if test -f "$$i"; then \
+	    echo "$(subdir)/$$i"; \
+	  else \
+	    echo "$$sdir/$$i"; \
+	  fi; \
+	done >> $(top_builddir)/cscope.files
+
+distclean-tags:
+	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
+
+distdir: $(DISTFILES)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
+	list='$(DISTFILES)'; \
+	  dist_files=`for file in $$list; do echo $$file; done | \
+	  sed -e "s|^$$srcdirstrip/||;t" \
+	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
+	case $$dist_files in \
+	  */*) $(MKDIR_P) `echo "$$dist_files" | \
+			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
+			   sort -u` ;; \
+	esac; \
+	for file in $$dist_files; do \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  if test -d $$d/$$file; then \
+	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
+	    if test -d "$(distdir)/$$file"; then \
+	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
+	    fi; \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
+	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
+	    fi; \
+	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
+	  else \
+	    test -f "$(distdir)/$$file" \
+	    || cp -p $$d/$$file "$(distdir)/$$file" \
+	    || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+check: check-am
+all-am: Makefile $(LTLIBRARIES)
+installdirs:
+	for dir in "$(DESTDIR)$(synaptics_drv_ladir)"; do \
+	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
+	done
+install: install-am
+install-exec: install-exec-am
+install-data: install-data-am
+uninstall: uninstall-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-am
+install-strip:
+	if test -z '$(STRIP)'; then \
+	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	      install; \
+	else \
+	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
+	fi
+mostlyclean-generic:
+
+clean-generic:
+
+distclean-generic:
+	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
+	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-am
+
+clean-am: clean-generic clean-libtool \
+	clean-synaptics_drv_laLTLIBRARIES mostlyclean-am
+
+distclean: distclean-am
+	-rm -rf ./$(DEPDIR)
+	-rm -f Makefile
+distclean-am: clean-am distclean-compile distclean-generic \
+	distclean-tags
+
+dvi: dvi-am
+
+dvi-am:
+
+html: html-am
+
+html-am:
+
+info: info-am
+
+info-am:
+
+install-data-am: install-synaptics_drv_laLTLIBRARIES
+
+install-dvi: install-dvi-am
+
+install-dvi-am:
+
+install-exec-am:
+
+install-html: install-html-am
+
+install-html-am:
+
+install-info: install-info-am
+
+install-info-am:
+
+install-man:
+
+install-pdf: install-pdf-am
+
+install-pdf-am:
+
+install-ps: install-ps-am
+
+install-ps-am:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-am
+	-rm -rf ./$(DEPDIR)
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-am
+
+mostlyclean-am: mostlyclean-compile mostlyclean-generic \
+	mostlyclean-libtool
+
+pdf: pdf-am
+
+pdf-am:
+
+ps: ps-am
+
+ps-am:
+
+uninstall-am: uninstall-synaptics_drv_laLTLIBRARIES
+
+.MAKE: install-am install-strip
+
+.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
+	clean-libtool clean-synaptics_drv_laLTLIBRARIES cscopelist-am \
+	ctags ctags-am distclean distclean-compile distclean-generic \
+	distclean-libtool distclean-tags distdir dvi dvi-am html \
+	html-am info info-am install install-am install-data \
+	install-data-am install-dvi install-dvi-am install-exec \
+	install-exec-am install-html install-html-am install-info \
+	install-info-am install-man install-pdf install-pdf-am \
+	install-ps install-ps-am install-strip \
+	install-synaptics_drv_laLTLIBRARIES installcheck \
+	installcheck-am installdirs maintainer-clean \
+	maintainer-clean-generic mostlyclean mostlyclean-compile \
+	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
+	tags tags-am uninstall uninstall-am \
+	uninstall-synaptics_drv_laLTLIBRARIES
+
+.PRECIOUS: Makefile
+
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
diff -urNp three-finger-dragging-1.9.0/src/synaptics.c xf86-input-synaptics-1.9.0/src/synaptics.c
--- three-finger-dragging-1.9.0/src/synaptics.c	2017-03-22 11:14:09.000000000 +0800
+++ xf86-input-synaptics-1.9.0/src/synaptics.c	2016-09-30 15:09:32.000000000 +0800
@@ -716,7 +716,7 @@ set_default_parameters(InputInfoPtr pInf
         xf86SetIntOption(opts, "ScrollButtonRepeat", 100);
 
     pars->locked_drags = xf86SetBoolOption(opts, "LockedDrags", FALSE);
-    pars->locked_drag_time = xf86SetIntOption(opts, "LockedDragTimeout", 500);
+    pars->locked_drag_time = xf86SetIntOption(opts, "LockedDragTimeout", 5000);
     pars->tap_action[RT_TAP] = xf86SetIntOption(opts, "RTCornerButton", 0);
     pars->tap_action[RB_TAP] = xf86SetIntOption(opts, "RBCornerButton", 0);
     pars->tap_action[LT_TAP] = xf86SetIntOption(opts, "LTCornerButton", 0);
@@ -769,8 +769,6 @@ set_default_parameters(InputInfoPtr pInf
         xf86SetIntOption(opts, "HorizResolution", horizResolution);
     pars->resolution_vert =
         xf86SetIntOption(opts, "VertResolution", vertResolution);
-	pars->three_finger_drag_delay = 
-		xf86SetIntOption(opts, "ThreeFingerDragDelay", 170);
     if (pars->resolution_horiz <= 0) {
         xf86IDrvMsg(pInfo, X_ERROR,
                     "Invalid X resolution, using 1 instead.\n");
@@ -1089,9 +1087,6 @@ SynapticsReset(SynapticsPrivate * priv)
 
     for (i = 0; i < priv->num_slots; i++)
         priv->open_slots[i] = -1;
-
-	priv->three_finger_drag_on = FALSE;
-	priv->has_seen_two_finger_scroll = FALSE;
 }
 
 static int
@@ -1899,7 +1894,6 @@ SetTapState(SynapticsPrivate * priv, enu
     case TS_START:
         priv->tap_button_state = TBS_BUTTON_UP;
         priv->tap_max_fingers = 0;
-		priv->has_seen_two_finger_scroll = FALSE;
         break;
     case TS_1:
         priv->tap_button_state = TBS_BUTTON_UP;
@@ -1952,8 +1946,6 @@ GetTimeOut(SynapticsPrivate * priv)
         return para->tap_time_2;
     case TS_4:
         return para->locked_drag_time;
-	case TS_3FINGER_START:
-		return para->three_finger_drag_delay;
     default:
         return -1;              /* No timeout */
     }
@@ -1976,25 +1968,6 @@ HandleTapProcessing(SynapticsPrivate * p
 
     touch = finger >= FS_TOUCHED && priv->finger_state == FS_UNTOUCHED;
     release = finger == FS_UNTOUCHED && priv->finger_state >= FS_TOUCHED;
-	int is_scroll = (priv->horiz_scroll_twofinger_on || 
-					priv->vert_scroll_twofinger_on) && 
-					(priv->tap_max_fingers == 2);
-	int exceed_bounds = ((abs(hw->x - priv->touch_on.x) >= para->tap_move) ||
-             (abs(hw->y - priv->touch_on.y) >= para->tap_move));
-    move = (finger >= FS_TOUCHED &&
-	/*
-            (priv->tap_max_fingers <=
-             ((priv->horiz_scroll_twofinger_on ||
-               priv->vert_scroll_twofinger_on) ? 2 : 1)) && */
-			 (!is_scroll || (is_scroll && priv->three_finger_drag_on==TRUE)) && exceed_bounds);
-	if (priv->three_finger_drag_on == TRUE) {
-		if (move == FALSE) {
-			DBG(3, "move==false 3fg==true; %d %d %d(x:%d y:%d vs %d)\n", finger, is_scroll, exceed_bounds,
-				abs(hw->x - priv->touch_on.x), 
-				abs(hw->y - priv->touch_on.y), para->tap_move);
-		}
-	}
-    /*
     move = (finger >= FS_TOUCHED &&
             (priv->tap_max_fingers <=
              ((priv->horiz_scroll_twofinger_on ||
@@ -2002,7 +1975,6 @@ HandleTapProcessing(SynapticsPrivate * p
             (priv->prevFingers == hw->numFingers &&
              ((abs(hw->x - priv->touch_on.x) >= para->tap_move) ||
               (abs(hw->y - priv->touch_on.y) >= para->tap_move))));
-    */
     press = (hw->left || hw->right || hw->middle);
 
     if (touch) {
@@ -2023,73 +1995,18 @@ HandleTapProcessing(SynapticsPrivate * p
  restart:
     switch (priv->tap_state) {
     case TS_START:
-        if (touch) {
-			if(hw->numFingers == 3) SetTapState(priv, TS_3FINGER_START, now);
-            else SetTapState(priv, TS_1, now);
-		}
+        if (touch)
+            SetTapState(priv, TS_1, now);
         break;
-
-	case TS_3FINGER_START:
-        if (para->clickpad && press) {
-            SetTapState(priv, TS_CLICKPAD_MOVE, now);
-            goto restart;
-        }
-		if (release) {
-			priv->has_seen_two_finger_scroll = FALSE;
-			priv->three_finger_drag_on = FALSE;
-			priv->tap_button = 2;
-            SetTapState(priv, TS_SINGLETAP, now);
-			break;
-		}
-		if (is_timeout) {
-	
-			// 2017-03-18:
-			// I think my understanding of timeout is incorrect ... !
-			// The timeout will cause the transition to SINGLETAP to never be executed
-			// TODO: Need to fix the timeout
-
-			// The user has touched for more than the threshold,
-			//    begin dragging
-
-			// To achieve 3-finger dragging, we must make up for all the
-			//   side effects that would have been caused by the usual
-			//   single-finger dragging execution path.
-			//
-			// The usual "drag" path is:
-			// TS_START ---> TS_1 ----> TS_2A ----> TS_3 ----> TS_DRAG
-			// 
-			SetMovingState(priv, MS_TOUCHPAD_RELATIVE, now);
-			SetTapState(priv, TS_DRAG, now);
-			priv->tap_button_state = TBS_BUTTON_DOWN;
-			priv->tap_button = 1;  // to post a "Left Button pressed" event
-			priv->three_finger_drag_on = TRUE;
-			priv->has_seen_two_finger_scroll = FALSE;
-			break;
-		}
-		break;
-
     case TS_1:
         if (para->clickpad && press) {
             SetTapState(priv, TS_CLICKPAD_MOVE, now);
             goto restart;
         }
-		// Two finger scolling: the deltas would be set to zero,
-		//    but it is better if we also prevent the state from
-		//    entering MOVE ?
-		if ((para->scroll_twofinger_vert || 
-		     para->scroll_twofinger_horiz ) &&
-			 exceed_bounds && priv->tap_max_fingers == 2) {
-			 priv->has_seen_two_finger_scroll = TRUE;
-		}
-		if (hw->numFingers == 3) {
-			SetTapState(priv, TS_3FINGER_START, now);
-			break;
-		}
-
-        if (move)  {
-			SetMovingState(priv, MS_TOUCHPAD_RELATIVE, now);
-			SetTapState(priv, TS_MOVE, now);
-			goto restart;
+        if (move) {
+            SetMovingState(priv, MS_TOUCHPAD_RELATIVE, now);
+            SetTapState(priv, TS_MOVE, now);
+            goto restart;
         }
         else if (is_timeout) {
             if (finger == FS_TOUCHED) {
@@ -2102,8 +2019,7 @@ HandleTapProcessing(SynapticsPrivate * p
             edge = edge_detection(priv, priv->touch_on.x, priv->touch_on.y);
             SelectTapButton(priv, edge);
             /* Disable taps outside of the active area */
-            if (!inside_active_area || 
-				(priv->has_seen_two_finger_scroll == TRUE)) {
+            if (!inside_active_area) {
                 priv->tap_button = 0;
             }
             SetTapState(priv, TS_2A, now);
@@ -2113,21 +2029,7 @@ HandleTapProcessing(SynapticsPrivate * p
         if (para->clickpad && press) {
             SetTapState(priv, TS_CLICKPAD_MOVE, now);
             goto restart;
-        } else if (hw->numFingers == 3) {
-			// When the user suddenly touches with a finger
-			//   enter TS_DRAG immediately
-			SetMovingState(priv, MS_TOUCHPAD_RELATIVE, now);
-			SetTapState(priv, TS_DRAG, now);
-			if( priv->three_finger_drag_on == FALSE) {
-				priv->tap_button_state = TBS_BUTTON_DOWN;
-				priv->tap_button = 1;  // to post a "Left Button pressed" event
-				priv->three_finger_drag_on = TRUE;
-			}
-			priv->touch_on.millis = now; // Since touch will not be set to TRUE
-			                             //   in this case, we need to set it
-										 //   manually
-			break;
-		}
+        }
         if (release) {
             SetMovingState(priv, MS_FALSE, now);
             SetTapState(priv, TS_START, now);
@@ -2183,47 +2085,14 @@ HandleTapProcessing(SynapticsPrivate * p
             SetTapState(priv, TS_CLICKPAD_MOVE, now);
             goto restart;
         }
-		if (priv->three_finger_drag_on == TRUE &&
-			hw->numFingers == 3) {
-			priv->three_finger_last_millis = now;
-		}
-
-		Bool should_stop = FALSE;
-
-		if (priv->three_finger_drag_on == TRUE && hw->numFingers < 3) {
-			// 2017-03-17: Maybe this feels more comfortable
-			if(1 || para->locked_drags) { // Give users the chance to put 3
-									 //      fingers onto the trackpad
-				if (priv->three_finger_last_millis +
-					para->locked_drag_time < now)
-					should_stop = TRUE;
-			} else { 
-				should_stop = TRUE;
-			}
-		}
-		
-		if (should_stop == TRUE) { // 1 or 2 fingers left the trackpad
-								  //   during a 3-finger drag
-								  //   when locked drags is not enabled:
-								  //   finish the drag
-			SetMovingState(priv, MS_TOUCHPAD_RELATIVE, now);
-			SetTapState(priv, TS_MOVE, now);
-			priv->three_finger_drag_on = FALSE;
-			priv->tap_button = 1;
-			priv->tap_button_state = TBS_BUTTON_UP;
-			break;
-		}
-
         if (move)
             SetMovingState(priv, MS_TOUCHPAD_RELATIVE, now);
         if (release) {
             SetMovingState(priv, MS_FALSE, now);
-            if (para->locked_drags || priv->three_finger_drag_on == TRUE) {
+            if (para->locked_drags) {
                 SetTapState(priv, TS_4, now);
             }
             else {
-				if (priv->three_finger_drag_on == TRUE)  // To release button 1
-					priv->tap_button = 1;
                 SetTapState(priv, TS_START, now);
             }
         }
@@ -2231,9 +2100,6 @@ HandleTapProcessing(SynapticsPrivate * p
     case TS_4:
         if (is_timeout) {
             SetTapState(priv, TS_START, now);
-			if (priv->three_finger_drag_on == TRUE) {
-				priv->three_finger_drag_on = FALSE; 
-			}
             goto restart;
         }
         if (touch)
@@ -2247,9 +2113,6 @@ HandleTapProcessing(SynapticsPrivate * p
         else if (release) {
             SetMovingState(priv, MS_FALSE, now);
             SetTapState(priv, TS_START, now);
-			if (priv->three_finger_drag_on == TRUE) {
-				priv->three_finger_drag_on = FALSE; 
-			}
         }
         break;
     case TS_CLICKPAD_MOVE:
@@ -2260,28 +2123,14 @@ HandleTapProcessing(SynapticsPrivate * p
         priv->horiz_scroll_twofinger_on = FALSE;
 
         /* Assume one touch is only for holding the clickpad button down */
-		/* If we want to do a 3-finger clickpad drag, we have to set the
-		   numFingers to 1 in order to enable the moving after the click,
-		   otherwise numFingers will be 2 and the gesture will be
-		   considered as 2-finger scrolling, and the pointer will not 
-		   move. */
         if (hw->numFingers > 1)
-            hw->numFingers = 1; // --;
+            hw->numFingers--;
         SetMovingState(priv, MS_TOUCHPAD_RELATIVE, now);
         if (!press) {
             SetMovingState(priv, MS_FALSE, now);
             SetTapState(priv, TS_MOVE, now);
             priv->count_packet_finger = 0;
         }
-
-		/* If we are in a three finger drag, finish it
-		   by setting the tap button to 1 and let the 
-		   outer code handle the "up" event of button 1 */
-		if(priv->three_finger_drag_on == TRUE) {
-			priv->three_finger_drag_on = FALSE;
-			priv->tap_button = 1;
-			priv->tap_button_state = TBS_BUTTON_UP;
-		}
         break;
     }
 
@@ -2394,8 +2243,8 @@ ComputeDeltas(SynapticsPrivate * priv, c
     if (!inside_area || !moving_state || priv->finger_state == FS_BLOCKED ||
         priv->vert_scroll_edge_on || priv->horiz_scroll_edge_on ||
         priv->vert_scroll_twofinger_on || priv->horiz_scroll_twofinger_on ||
-        priv->circ_scroll_on || priv->prevFingers != hw->numFingers// ||
-        /*(moving_state == MS_TOUCHPAD_RELATIVE && hw->numFingers != 1)*/) {
+        priv->circ_scroll_on || priv->prevFingers != hw->numFingers ||
+        (moving_state == MS_TOUCHPAD_RELATIVE && hw->numFingers != 1)) {
         /* reset packet counter. */
         priv->count_packet_finger = 0;
         goto out;
@@ -2525,8 +2374,7 @@ HandleScrolling(SynapticsPrivate * priv,
 
     if (priv->synpara.touchpad_off == TOUCHPAD_TAP_OFF ||
         priv->synpara.touchpad_off == TOUCHPAD_OFF ||
-        priv->finger_state == FS_BLOCKED ||
-		priv->three_finger_drag_on == TRUE) {
+        priv->finger_state == FS_BLOCKED) {
         stop_coasting(priv);
         priv->circ_scroll_on = FALSE;
         priv->vert_scroll_edge_on = FALSE;
diff -urNp three-finger-dragging-1.9.0/src/synapticsstr.h xf86-input-synaptics-1.9.0/src/synapticsstr.h
--- three-finger-dragging-1.9.0/src/synapticsstr.h	2017-03-22 11:14:09.000000000 +0800
+++ xf86-input-synaptics-1.9.0/src/synapticsstr.h	2016-09-15 11:46:35.000000000 +0800
@@ -40,8 +40,6 @@
 #define HAVE_THREADED_INPUT 1
 #endif
 
-#define DEBUG
-
 #ifdef DBG
 #undef DBG
 #endif
@@ -138,8 +136,6 @@ enum TapState {
     TS_4,                       /* After release when "locked drags" enabled */
     TS_5,                       /* After touch when "locked drags" enabled */
     TS_CLICKPAD_MOVE,           /* After left button press on a clickpad */
-
-    TS_3FINGER_START,           /* After the first touch which is also a 3-finger touch */
 };
 
 enum TapButtonState {
@@ -235,10 +231,6 @@ typedef struct _SynapticsParameters {
     int hyst_x, hyst_y;         /* x and y width of hysteresis box */
 
     int maxDeltaMM;               /* maximum delta movement (vector length) in mm */
-    int three_finger_drag_delay;   /* The time that must elapse before
-                                      transitioning from a 3-finger touch
-                                      to a 3-finger drag */
-
 } SynapticsParameters;
 
 struct _SynapticsPrivateRec {
@@ -287,15 +279,7 @@ struct _SynapticsPrivateRec {
     int tap_button;             /* Which button started the tap processing */
     enum TapButtonState tap_button_state;       /* Current tap action */
     SynapticsMoveHistRec touch_on;      /* data when the touchpad is touched/released */
-    CARD32 three_finger_last_millis         ; /* Last timestamp when 3 fingers are on the trackpad
-	                                         in a 3-finger drag. It is possible to continue
-											 dragging using 1 or 2 fingers within the
-											 LockedDragTimeout limit after this time
-											 step for compatibility with the existing state
-											 transitions. However if we're in a 3-finger drag
-											 the user is only supposed to prolong the drag
-											 only with 3 fingers but not 1 or 2. 
-											 This is why we need to keep track of this timestamp. */
+
     enum MovingState moving_state;      /* previous moving state */
     Bool vert_scroll_edge_on;   /* Keeps track of currently active scroll modes */
     Bool horiz_scroll_edge_on;  /* Keeps track of currently active scroll modes */
@@ -304,10 +288,6 @@ struct _SynapticsPrivateRec {
     Bool circ_scroll_on;        /* Keeps track of currently active scroll modes */
     Bool circ_scroll_vert;      /* True: Generate vertical scroll events
                                    False: Generate horizontal events */
-    Bool three_finger_drag_on;  // Whether we're in the midst of a 3finger drag
-    Bool has_seen_two_finger_scroll; // Whether we've seen a two-finger scroll
-                                     //      in the current state transition loop
- 
     enum MidButtonEmulation mid_emu_state;      /* emulated 3rd button */
     int repeatButtons;          /* buttons for repeat */
     int nextRepeat;             /* Time when to trigger next auto repeat event */
